{"gfp":[{"funcName":"add","paramList":["number","number"],"returnType":"number","desc":"求和 +","express":"({0} + {1})"},{"funcName":"sub","paramList":["number","number"],"returnType":"number","desc":"求差 -","express":"({0} - {1})"},{"funcName":"dev","paramList":["number","number"],"returnType":"number","desc":"求商 ÷","express":"({0} / {1})"},{"funcName":"multi","paramList":["number","number"],"returnType":"number","desc":"求积 x","express":"({0} * {1})"},{"funcName":"mod","paramList":["number","number"],"returnType":"number","desc":"求模 %","express":"({0} % {1})"},{"funcName":"random","paramList":[],"returnType":"number","desc":"取随机数（0 - 1）","express":"(Random[0,1])"},{"funcName":"larger","paramList":["number","number"],"returnType":"bool","desc":"大于 ＞","express":"({0} > {1})"},{"funcName":"smaller","paramList":["number","number"],"returnType":"bool","desc":"小于 <","express":"({0} ＜ {1})"},{"funcName":"equal","paramList":["number","number"],"returnType":"bool","desc":"等于 =","express":"({0} == {1})"},{"funcName":"notEqual","paramList":["number","number"],"returnType":"bool","desc":"不等于 !=","express":"({0} != {1})"},{"funcName":"And","paramList":["bool","bool"],"returnType":"bool","desc":"And 运算","express":"({0} && {1})"},{"funcName":"Or","paramList":["bool","bool"],"returnType":"bool","desc":"Or 运算","express":"({0} or {1})"},{"funcName":"Not","paramList":["bool"],"returnType":"bool","desc":"Not 运算","express":"(Not {0})"},{"funcName":"toString","paramList":["number"],"returnType":"string","desc":"转换数字为字符串","express":"String({0})"},{"funcName":"toNumber","paramList":["string"],"returnType":"number","desc":"转换字符串为数字","express":"Number(‘{0}’)"},{"funcName":"appendStr","paramList":["string","string"],"returnType":"string","desc":"字符串连接","express":"‘{0}’ + ‘{1}’"},{"funcName":"log","paramList":["string"],"returnType":"void","desc":"Log打印","express":"Print(‘{0}’)"},{"funcName":"setLocal","paramList":["string","string"],"returnType":"void","desc":"设置局部变量","express":"设置局部变量 [{0}] = {1}"},{"funcName":"getLocal","paramList":["string"],"returnType":"any","desc":"获取局部变量","express":"局部变量[{0}]"},{"funcName":"owner","paramList":[],"returnType":"any","desc":"触发单位","express":"触发单位"},{"funcName":"selectUnit","paramList":[],"returnType":"any","desc":"当前选取单位","express":"选取单位"},{"funcName":"matchedUnit","paramList":[],"returnType":"any","desc":"当前匹配单位","express":"匹配单位"},{"funcName":"matchedArray","paramList":[],"returnType":"Array","desc":"匹配单位组","express":"匹配单位组"},{"funcName":"lenOfArray","paramList":["Array"],"returnType":"number","desc":"获取数组长度","express":"({0}的长度)"},{"funcName":"curOwner","paramList":[],"returnType":"Unit","desc":"当前持有对象","express":"(Owner)"},{"funcName":"partrol","paramList":["Unit"],"returnType":"void","desc":"通知指定单位巡逻","express":"让{0}巡逻"},{"funcName":"seekUnit","paramList":["Unit","Unit"],"returnType":"void","desc":"通知指定单位追踪目标","express":"让{0}追踪{1}"},{"funcName":"isInRange","paramList":["Unit","Unit"],"returnType":"bool","desc":"单位视野范围检测","express":"{0}在{1}的视野中"},{"funcName":"isPlayer","paramList":["Unit"],"returnType":"bool","desc":"指定单位是玩家","express":"{0}是玩家"}]}
